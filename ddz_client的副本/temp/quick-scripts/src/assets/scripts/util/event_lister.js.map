{"version":3,"sources":["assets/scripts/util/event_lister.js"],"names":["eventLister","obj","register","on","type","method","hasOwnProperty","push","fire","methodList","i","length","handle","args","arguments","console","log","apply","removeLister","removeAllLister"],"mappings":";;;;;;;;;;;AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAASC,GAAT,EAAa;AAC7B,MAAIC,QAAQ,GAAG,EAAf;;AAEAD,EAAAA,GAAG,CAACE,EAAJ,GAAS,UAASC,IAAT,EAAcC,MAAd,EAAqB;AAC1B,QAAGH,QAAQ,CAACI,cAAT,CAAwBF,IAAxB,CAAH,EAAiC;AAC7BF,MAAAA,QAAQ,CAACE,IAAD,CAAR,CAAeG,IAAf,CAAoBF,MAApB;AACH,KAFD,MAEK;AACDH,MAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiB,CAACC,MAAD,CAAjB;AACH;AACJ,GAND;;AAQAJ,EAAAA,GAAG,CAACO,IAAJ,GAAW,UAASJ,IAAT,EAAc;AACrB,QAAGF,QAAQ,CAACI,cAAT,CAAwBF,IAAxB,CAAH,EAAkC;AAC9B,UAAIK,UAAU,GAAGP,QAAQ,CAACE,IAAD,CAAzB;;AACA,WAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,UAAU,CAACE,MAAzB,EAAgC,EAAED,CAAlC,EAAoC;AAChC,YAAIE,MAAM,GAAGH,UAAU,CAACC,CAAD,CAAvB;AACA,YAAIG,IAAI,GAAG,EAAX;;AACA,aAAI,IAAIH,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAACI,SAAS,CAACH,MAA1B,EAAiC,EAAED,CAAnC,EAAqC;AACjCG,UAAAA,IAAI,CAACN,IAAL,CAAUO,SAAS,CAACJ,CAAD,CAAnB;AACH,SAL+B,CAOhC;;;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAA+BZ,IAA3C;AACAQ,QAAAA,MAAM,CAACK,KAAP,CAAa,IAAb,EAAkBJ,IAAlB;AACH;AACJ;AACJ,GAfD;;AAiBAZ,EAAAA,GAAG,CAACiB,YAAJ,GAAmB,UAASd,IAAT,EAAc;AAC7BF,IAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiB,EAAjB;AACH,GAFD;;AAIAH,EAAAA,GAAG,CAACkB,eAAJ,GAAsB,YAAU;AAC5BjB,IAAAA,QAAQ,GAAG,EAAX;AACH,GAFD;;AAIA,SAAOD,GAAP;AACH,CArCD;;eAuCeD","sourceRoot":"/","sourcesContent":["const eventLister = function(obj){\n    var register = {}\n\n    obj.on = function(type,method){\n        if(register.hasOwnProperty(type)){\n            register[type].push(method)\n        }else{\n            register[type] = [method]\n        }\n    }\n\n    obj.fire = function(type){\n        if(register.hasOwnProperty(type)) {\n            var methodList = register[type]\n            for(var i=0;i<methodList.length;++i){\n                var handle = methodList[i]\n                var args = []\n                for(var i = 1;i<arguments.length;++i){\n                    args.push(arguments[i])\n                }\n\n                //handle.call(this,args)\n                console.log(\"handle.call(this,args) type:\"+type)\n                handle.apply(this,args)\n            } \n        }\n    }\n\n    obj.removeLister = function(type){\n        register[type] = []\n    }\n\n    obj.removeAllLister = function(){\n        register = {}\n    }\n\n    return obj\n}\n\nexport default eventLister"]}