{"version":3,"sources":["assets/scripts/data/socket_ctr.js"],"names":["socketCtr","that","respone_map","call_index","_socket","event","_sendmsg","cmdtype","req","callindex","connected","fire","emit","cmd","data","_request","callback","console","log","JSON","stringify","initSocket","opts","close","window","io","connect","defines","serverUrl","on","res","hasOwnProperty","callBackIndex","result","type","request_wxLogin","request_creatroom","request_jion","request_reset","request_enter_room","request_re_room","request_recovery","request_buchu_card","request_chu_card","onPlayerJoinRoom","onPlayerReady","onGameStart","onChangeHouseManage","requestReady","requestLeaveRoom","onPlayerDisconnect","onPlayerDisonline","onPlayerReonline","onGameFinish","requestStart","requestRobState","state","onPushCards","onCanRobState","onRobState","onChangeMaster","onShowBottomCard","onCanChuCard","onRoomChangeState","onOtherPlayerChuCard","onSocketClosed","onNotLogined","onUpdateinfo","_event"],"mappings":"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","sourceRoot":"/","sourcesContent":["import eventlister from \"../util/event_lister.js\"\n// import socketio from \"../lib/socket_io.js\"\nvar socketCtr = function(){\n    var that = {}\n    var respone_map = {} \n    var call_index = 0\n\n    that._socket = null\n    var event = eventlister({})\n     that._sendmsg = function(cmdtype,req,callindex){\n\t    if(!that._socket.connected){\n\t\t\t//that.initSocket();\n\t\t\tevent.fire(\"socket_closed_notify\",{});\n\t\t}\n        that._socket.emit(\"notify\",{cmd:cmdtype,data:req,callindex:callindex})\n    } \n \n     that._request = function(cmdtype,req,callback){\n        console.log(\"send cmd:\"+cmdtype+\"  \"+ JSON.stringify(req))\n        call_index++ \n        respone_map[call_index] = callback\n        that._sendmsg(cmdtype,req,call_index)\n    } \n  \n        \n    that.initSocket = function(callback){\n        var opts = {\n            'reconnection':true,\n            'force new connection': false,\n            'transports':['websocket', 'polling']\n        }\n\t\tif(that._socket!=null){\n\t\t\tthat._socket.close();\n\t\t\tthat._socket=null;\n\t\t}\n        that._socket = window.io.connect(defines.serverUrl,opts);// new WebSocket(defines.serverUrl);// socketio(defines.serverUrl,opts);//  window.io.connect(defines.serverUrl,opts);\n\n        that._socket.on(\"connection\",function(){\n            console.log(\"connect server success!!\")\n\t\t\tif(callback){\n\t\t\t\tconsole.log(\"有回调\")\n\t\t\t\tcallback();\n\t\t\t}\n          })\n\t\tthat._socket.on(\"disconnect\",function(){\n\t\t\tconsole.log(\"disconnect from server!\")\n\t\t\t event.fire(\"socket_closed_notify\",{});\n\t\t})\n\t\t\n\n       that._socket.on(\"notify\",function(res){\n         console.log(\"on notify cmd:\" + JSON.stringify(res))\n         if(respone_map.hasOwnProperty(res.callBackIndex)){\n           var callback = respone_map[res.callBackIndex]\n           if(callback){\n               callback(res.result,res.data)\n           }\n          }else{\n           //if(res.callBackIndex!=0){\n           //console.log(\"not found call index\",res.callBackIndex)\n              \n               //提交一个监听的事件给监听器\n        //  on notify cmd:{\"type\":\"player_joinroom_notify\",\"result\":0,\"data\":\n        //  {\"accountid\":\"2586422\",\"nick_name\":\"tiny110\",\"avatarUrl\":\n        //  \"avatar_3\",\"goldcount\":1000,\"seatindex\":2},\"callBackIndex\":null}\n              //没有找到回到函数，就给事件监听器提交一个事件\n              var type = res.type\n              event.fire(type,res.data)\n          // }\n           \n         }\n\n        })\n\n    }\n\n    that.request_wxLogin = function(req,callback){\n        that._request(\"wxlogin\",req,callback)\n    }\n    \n    that.request_creatroom = function(req,callback){\n        that._request(\"createroom_req\",req,callback)\n    }\n\n    that.request_jion = function(req,callback){\n        that._request(\"joinroom_req\",req,callback)\n    }\n\tthat.request_reset = function(req,callback){\n\t    that._request(\"resetroom_req\",req,callback)\n\t}\n\n    that.request_enter_room = function(req,callback){\n       that._request(\"enterroom_req\",req,callback)\n    }\n\n     that.request_re_room = function(req,callback){\n         that._request(\"reroom_req\",req,callback)\n     }\n\t \n\t that.request_recovery = function(req,callback){// 请求 恢复牌局信息\n\t     that._request(\"recovery_req\",req,callback)\n\t }\n    //发送不出牌信息\n    that.request_buchu_card =  function(req,callback){\n        that._request(\"chu_bu_card_req\",req,callback)\n    }\n    /*玩家出牌\n      需要判断: \n         出的牌是否符合规则\n         和上个出牌玩家比较，是否满足条件\n\n    */\n    that.request_chu_card = function(req,callback){\n       that._request(\"chu_card_req\",req,callback)\n    }\n    //监听其他玩家进入房间消息\n    that.onPlayerJoinRoom = function(callback){\n         event.on(\"player_joinroom_notify\",callback)\n    }\n\n    that.onPlayerReady = function(callback){\n        event.on(\"player_ready_notify\",callback)\n    }\n\n    that.onGameStart = function(callback){\n        if(callback){\n           event.on(\"gameStart_notify\",callback)\n        }\n    }\n\n    that.onChangeHouseManage = function(callback){\n        if(callback){\n            event.on(\"changehousemanage_notify\",callback)\n        }\n    }\n    //发送ready消息\n    that.requestReady = function(){\n        that._sendmsg(\"player_ready_notify\",{},null)\n    }\n\tthat.requestLeaveRoom=function(){\n\t\tthat._sendmsg(\"player_leave_room\",{},null)\n\t}\n    //监听 disconnect 消息  玩家 离开房间\n\tthat.onPlayerDisconnect=function(callback){\n\t\tif(callback){\n\t\t\tevent.on(\"player_disconnect_notify\",callback);\n\t\t}\n\t}\n\t//监听 disonline 消息  玩家 游戏中掉线\n\tthat.onPlayerDisonline=function(callback){\n\t\tif(callback){\n\t\t\tevent.on(\"player_disonline_notify\",callback);\n\t\t}\n\t}\n\t//监听 reonline 消息  玩家 游戏中重新连线\n\tthat.onPlayerReonline=function(callback){\n\t\tif(callback){\n\t\t\tevent.on(\"player_reonline_notify\",callback);\n\t\t}\n\t}\n\tthat.onGameFinish=function(callback){\n\t\tif(callback){\n\t\t\tevent.on(\"gameFinish_notify\",callback);//监听服务端 返回消息\n\t\t}\n\t}\n\t\n \n    that.requestStart = function(callback){\n        that._request(\"player_start_notify\",{},callback)\n    }\n\n    //玩家通知服务器抢地主消息\n    that.requestRobState = function(state){\n        that._sendmsg(\"player_rob_notify\",state,null)\n    }\n    //服务器下发牌通知\n    that.onPushCards = function(callback){\n        if(callback){\n            event.on(\"pushcard_notify\",callback)\n         }\n    }\n\n    //监听服务器通知开始抢地主消息\n    that.onCanRobState = function(callback){\n        if(callback){\n            event.on(\"canrob_notify\",callback)\n         }\n    }\n\n    //监听服务器:通知谁抢地主操作消息\n    that.onRobState = function(callback){\n        if(callback){\n            event.on(\"canrob_state_notify\",callback)\n         }\n    }\n\n    //监听服务器:确定地主消息\n    that.onChangeMaster = function(callback){\n        if(callback){\n            event.on(\"change_master_notify\",callback)\n         }\n    }\n\n    //监听服务器:显示底牌消息\n    that.onShowBottomCard = function(callback){\n        if(callback){\n            event.on(\"change_showcard_notify\",callback)\n         }\n    }\n\n    //监听服务器:可以出牌消息\n    that.onCanChuCard = function(callback){\n        if(callback){\n            event.on(\"can_chu_card_notify\",callback)\n        }\n    }\n   \n    that.onRoomChangeState = function(callback){ // 房间状态改变通知\n        if(callback){\n            event.on(\"room_state_notify\",callback)\n        }\n    }\n\n    that.onOtherPlayerChuCard = function(callback){//其它玩家出牌通知\n        if(callback){\n            event.on(\"other_chucard_notify\",callback)\n        }\n    }\n\t\n\tthat.onSocketClosed=function(callback){ //玩家掉线通知\n\t\tif(callback){\n\t\t    event.on(\"socket_closed_notify\",callback)\n\t\t}\n\t}\n\tthat.onNotLogined=function(callback){//玩家 未登录 通知\n\t\t  event.on(\"not_logined\",callback)\n\t}\n\n\tthat.onUpdateinfo=function(callback){//玩家 分数更新\n\t\tevent.on(\"updateinfo_notify\",callback)\n\t}\n\tthat._event=event;\n\t\n    return that\n}\n\nexport default socketCtr "]}